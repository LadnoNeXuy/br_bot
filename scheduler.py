import pandas as pd
from datetime import datetime
from aiogram import Bot
from config import CHAT_ID, BOT_TOKEN


def escape_markdown(text: str) -> str:
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã Markdown –≤ —Ç–µ–∫—Å—Ç–µ
    escape_chars = r'\_*[]()'
    return ''.join(f'\\{c}' if c in escape_chars else c for c in text)

async def check_and_congratulate(bot: Bot):
    print("üïò –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
    try:
        df = pd.read_csv("birthday_list.csv")
        today = datetime.today().strftime("%d.%m.%Y")
        birthday_people = df[df['birthday'] == today]

        if birthday_people.empty:
            await bot.send_message(chat_id=bot.chat_id if hasattr(bot, 'chat_id') else None, text="–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤.")
            print("üì≠ –ù–∏–∫–æ–≥–æ –Ω–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º.")
            return

        messages = []

        for _, row in birthday_people.iterrows():
            name = row.get("name", "").strip()
            username = row.get("username", "").strip()
            phone = row.get("phone", "").strip()
            user_id = str(row.get("user_id", "")).strip()

            parts = []
            if username and username != "-":
                parts.append(username)
            if phone and phone != "-":
                parts.append(f"üì± {phone}")
            if user_id and user_id != "-":
                parts.append(f"üÜî {user_id}")

            if parts:
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º name –∏ parts –¥–ª—è Markdown
                escaped_name = escape_markdown(name)
                escaped_parts = [escape_markdown(p) for p in parts]
                message = f"üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {escaped_name}: " + " | ".join(escaped_parts)
                messages.append(message)

        if messages:
            full_message = "\n\n".join(messages)
            await bot.send_message(chat_id=bot.chat_id if hasattr(bot, 'chat_id') else None, text=full_message, parse_mode="Markdown")
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:")
            print(full_message)
        else:
            await bot.send_message(chat_id=bot.chat_id if hasattr(bot, 'chat_id') else None, text="üéâ –°–µ–≥–æ–¥–Ω—è –µ—Å—Ç—å –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∏, –Ω–æ –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
            print("‚ö† –î–∞–Ω–Ω—ã–µ –µ—Å—Ç—å, –Ω–æ –Ω–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ check_and_congratulate: {e}")
